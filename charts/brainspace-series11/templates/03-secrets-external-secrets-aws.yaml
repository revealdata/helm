{{- if eq  .Values.secrets.provider "external-secrets" }}
{{- if eq  .Values.secrets.externalSecrets.provider "aws" }}
# Using AWS SecretsManager
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: brainspace-secretstore
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  provider:
    aws:
      service: SecretsManager
      {{- if .Values.secrets.ServiceAccount }}
      {{- if .Values.secrets.ServiceAccount.RoleArn }}
      role: {{ .Values.secrets.externalSecrets.aws.RoleArn | quote }}
      {{- end }}{{- end }}
      region: {{ .Values.secrets.externalSecrets.aws.Region | default "us-east-1" }}

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: brainspace-secrets
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: brainspace-secretstore
    kind: SecretStore
  target:
    name: brainspace-secrets
    creationPolicy: Owner
  data:
    - secretKey: brainspace_db_host
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default "brains-series11-resources" }}
        property: "host"
    - secretKey: brainspace_db_port
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default "brains-series11-resources" }}
        property: "port"
    - secretKey: brainspace_db_name
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default "brains-series11-resources" }}
        property: "database"
    - secretKey: brainspace_db_user
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default "brains-series11-resources" }}
        property: "brainsDbUsername"
    - secretKey: brainspace_db_password
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default "brains-series11-resources" }}
        property: "brainsDbPassword"
{{- end }}
{{- end }}