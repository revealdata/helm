{{- if eq .Values.secrets.provider "external-secrets" }}
{{- if eq .Values.secrets.ExternalSecrets.provider "azurekv" }}
# Using Azure KeyVault
---
apiVersion: v1
kind: Secret
metadata:
  name: brainspace-sp
  namespace: {{ .Values.global.namespace | default .Release.Name }}
type: Opaque
data:
  ClientID: {{ .Values.secrets.ExternalSecrets.azurekv.auth.ClientID | b64enc }}
  ClientSecret: {{ .Values.secrets.ExternalSecrets.azurekv.auth.ClientSecret | b64enc }}

---
apiVersion: external-secrets.io/v1alpha1
kind: SecretStore
metadata:
  name: brainspace-secret-store
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  provider:
    azurekv:
      tenantId: {{ .Values.secrets.ExternalSecrets.azurekv.TennantId | quote }}
      vaultUrl: {{ .Values.secrets.ExternalSecrets.azurekv.VaultUrl | quote }}
      authSecretRef:
        clientId:
          name: brainspace-sp
          key: ClientID
        clientSecret:
          name: brainspace-sp
          key: ClientSecret
---
apiVersion: external-secrets.io/v1beta1 
kind: ExternalSecret
metadata:
  name: brainspace-secrets
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: brainspace-secret-store
    kind: SecretStore
  target:
    name: brainspace-secrets
    creationPolicy: Owner
  data:
    - secretKey: brainspace_db_host
      remoteRef:
        key: brainspace-db-host
    - secretKey: brainspace_db_port
      remoteRef:
        key: brainspace-db-port
    - secretKey: brainspace_db_name
      remoteRef:
        key: brainspace-db-name
    - secretKey: brainspace_db_user
      remoteRef:
        key: brainspace-db-user
    - secretKey: brainspace_db_password
      remoteRef:
        key: brainspace-db-password
{{- end }}
{{- end }}