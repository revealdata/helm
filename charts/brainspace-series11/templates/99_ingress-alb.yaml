{{- $ingress_class := (.Values.ingress.class | default "alb") -}}
{{- if eq $ingress_class "alb" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  name: brains-ui
  annotations:
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/ingress/annotations/
    kubernetes.io/ingress.class: {{ $ingress_class }}
    alb.ingress.kubernetes.io/target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-name: "alb-{{ .Release.Name }}"
    {{- if .Values.ingress.hostname }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.ingress.hostname }}
    {{- end }}
    {{- if .Values.ingress.public }}
    alb.ingress.kubernetes.io/scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    {{- else }}
    alb.ingress.kubernetes.io/scheme: internal
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    {{- end }}
    alb.ingress.kubernetes.io/security-groups: "k8s-brainspace-ingress"
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    {{- if .Values.ingress.logBucket }}
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000,routing.http2.enabled=true,routing.http.drop_invalid_header_fields.enabled=true,access_logs.s3.enabled=true,access_logs.s3.prefix=ingress_logs/brains-ui/{{ .Values.global.namespace | default .Release.Name }},access_logs.s3.bucket={{ .Values.ingress.logBucket }}
    {{- else }}
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000,routing.http2.enabled=true,routing.http.drop_invalid_header_fields.enabled=true
    {{- end }}
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=false
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-Res-2021-06
    #  Health check path annotations
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "15"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "4"
    {{- if .Values.ingress.sslCertArn }}
    # The ARN of your SSL certificate.
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.sslCertArn }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # SSL Redirect Setting
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    {{- else }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    {{- end }}
    {{ if .Values.ingress.annotations }}
    {{- toYaml .Values.ingress.annotations }}
    {{- end }}

spec:
  # Needed for nginx ingress for some reason. It doesn't like not having a default backend.
  defaultBackend:
    service:
      name: brains-ui
      port:
        number: 8443
  rules:
    - http:
        paths:
          {{- if .Values.ingress.sslCertArn }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
          {{- end }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: brains-ui
                port:
                  number: 8443
{{- end }}