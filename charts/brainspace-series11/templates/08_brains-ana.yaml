---
# Deployment: brains-ana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: brains-ana
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  labels:
    app.kubernetes.io/name: brains-ana
    app.kubernetes.io/part-of: brainspace
    app.kubernetes.io/component: analytics
spec:
  selector:
    matchLabels:
      app: deployment-brains-ana
  progressDeadlineSeconds: 600
  replicas: {{ .Values.brains_ana.replicas | default 0 }}
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: deployment-brains-ana
      {{- if .Values.brains_ana.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      # IMPORTANT: This allows multiple ANA pods to be resolvable by the APP pod.
      # Requires k8s ver. 1.22
      setHostnameAsFQDN: true
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
        {{- if .Values.brains_ana.nodeGroup }}
        eks.amazonaws.com/nodegroup: {{ .Values.brains_ana.nodeGroup }}
        {{- end }}
      {{- if .Values.global.ecr }} {{- if .Values.global.ecr.secret }}
      imagePullSecrets:
      - name: {{ .Values.global.ecr.secret }}
      {{- end }} {{- end }}
      {{- if and .Values.global.serviceAccount }}
      {{- if .Values.global.serviceAccount.roleArn }}
      serviceAccountName: {{ .Values.global.serviceAccount.name | default "brainspace-sa" }}
      {{- end }}{{- end }}
      containers:
      - name: brains-ana
        image: {{ .Values.brains_ana.image }}:{{ .Values.brains_ana.tag }}
        imagePullPolicy: {{ .Values.brains_ana.imagePullPolicy | default "Always" }}
        resources:
          requests:
            {{- include "resources.values" .Values.brains_ana | indent 8 }}
          limits:
            {{- include "resources.values" .Values.brains_ana | indent 8 }}
        ports:
        - containerPort: 1604
        envFrom:
        - configMapRef:
            name: brains-config
        - configMapRef:
            name: brains-ana-config
        env:
          - name: BRAINS_ANA_ROLE
            value: ANA
          - name: ANALYSIS_HEAP_MAX
            value: "1g"
          {{- /* env vars for Java Resources (_helpers.tpl) */}}
          {{- include "java.resources.values" .Values.brains_ana | indent 6 }}
          {{- /* env vars for Brainspace secrets (_helpers.tpl) */}}
          {{- include "secrets.env" . |indent 6 }}
        lifecycle:
          postStart:
            exec:
              command: 
                - "/bin/bash"
                - "-c"
                - |
                  chown -R 1604:1604 /localdata;
                  if [[ -e /var/lib/brains/license/brainspace_license.txt ]]; then
                  cp /var/lib/brains/license/brainspace_license.txt /var/lib/brains/.brainspace/brainspace_license.txt;
                  fi;
                  if [[ -e /var/lib/brains/app/analytics-server/logs/analysisserver.log ]]; then
                  rm -f /var/lib/brains/app/analytics-server/logs/analysisserver.log;
                  fi;
                  ln -s /dev/stdout /var/lib/brains/app/analytics-server/logs/analysisserver.log;
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        {{- if .Values.global.secretArn }}
        - name: brainspace-secrets-vol
          mountPath: "/mnt/brainspace-secrets"
          readOnly: true
        {{- end }}
        - name: basis-data
          readOnly: true
          mountPath: /var/lib/brains/.brainspace/{{ .Values.brains_bt.basis_dir }}
        - name: bt-data
          readOnly: true
          mountPath: /var/lib/brains/.brainspace/BatchTools
        - name: shared-data
          readOnly: false
          mountPath: /data
        - name: app-localdata
          readOnly: false
          mountPath: /mnt/localdata
        - name: local-data
          readOnly: false
          mountPath: /localdata/brainspace
        # Secrets Volume Mounts
        {{- include "secrets.volumes.mounts" . | indent 8 }}
      volumes:
      # Secrets Volumes
      {{- include "secrets.volumes" . | indent 6 }}
      - name: local-data
        {{- if .Values.brains_ana.storage.class }}
        {{- if eq .Values.brains_ana.storage.class "emptyDir" }}
        emptyDir: {}
        {{- else }}
        ephemeral:
          volumeClaimTemplate:
            metadata:
              creationTimestamp: null
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: {{ .Values.brains_ana.storage.size | default 500 }}Gi
              storageClassName: {{ .Values.brains_ana.storage.class }}
              volumeMode: Filesystem
        {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if or (eq .Values.storage.class "efs-sc") (eq .Values.storage.class "pvc") }}
      - name: shared-data
        persistentVolumeClaim:
          claimName: {{- if .Values.storage.pvc }} {{ .Values.storage.pvc.sharedData }} {{- else }} pvc-shared-data {{- end }}
      - name: app-localdata
        persistentVolumeClaim:
          claimName: {{- if .Values.storage.pvc }} {{ .Values.storage.pvc.appLocalData }} {{- else }} pvc-app-localdata {{- end }}
      - name: bt-data
        persistentVolumeClaim:
          claimName: {{- if .Values.storage.pvc }} {{ .Values.storage.pvc.BtData }} {{- else }} pvc-bt-data {{- end }}
      - name: basis-data
        persistentVolumeClaim:
          claimName: {{- if .Values.storage.pvc }} {{ .Values.storage.pvc.BasisData }} {{- else }} pvc-basis-data {{- end }}
      {{- else }}
      - name: bt-data
        emptyDir: {}
      - name: basis-data
        emptyDir: {}
      - name: shared-data
        emptyDir: {}
      - name: app-localdata
        emptyDir: {}
      {{- end }}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 15
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      - effect: "NoSchedule"
        key: "linux_large_brs"
        operator: "Exists"
        {{- if .Values.brains_ana.tolerations }}
{{ toYaml .Values.brains_ana.tolerations | indent 6}}
        {{- end }}
        

---
apiVersion: v1
kind: Service
metadata:
  name: brains-ana
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  type: NodePort
  selector:
    app: deployment-brains-ana
  ports:
    - name: http
      protocol: TCP
      port: 1604
      targetPort: 1604
