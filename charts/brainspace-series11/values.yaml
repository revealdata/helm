---
global:
  # -- Optionally set a namespace value. If empty, the helm release name is used
  namespace: ""
  # -- Optionally disable the namespace creation as it may already exist
  NoNamespace: false
  # -- Optionally set a service account for the pods
  serviceAccount:
    name: ""
    roleArn: ""
  database:
    # -- Use a PostgreSQL container and dbAccessPointId
    # -- If you are using Brainspace DB container, set secret's 'host' value to 'brains-db'
    # -- false = using an outside database like AWS RDS
    useContainer: false
    # -- Use an SSL connection to PostgreSQL .Set to 'false' if using the database container.
    useSsl: true
    # -- PostgreSQL Auth mechanism (md5, scram-sha-256)
    # -- Use 'md5' if using the database container
    authMech: "scram-sha-256"
  # -- env: An optional list of global environment variables
  env: {}
    #VAR_NAME: "value"

  ecr:
    enabled: false
    # -- AWS Account ID (default "053522176595")
    account: ""
    # -- ECR AWS Region (default "us-east-1")
    region: ""
    # -- Set the full hostname/url for the secret rather than building it with account and region
    host: ""
    # -- Docker ECR Password (required)
    # -- Command: aws ecr get-login-password
    password: ""

storage:
  # -- Persistent Storage Class
  # -- Options:
  # --- efs-sc: (https://github.com/kubernetes-sigs/aws-efs-csi-driver)
  # --- pvc: Use pre-existing persistent volume claims
  class: efs-sc

  # -- Options for class: efs-sc
  efs:
    # -- The EFS FileSystemId
    fileSystemId: ""
    # -- Shared /data EFS AccessPointId
    SharedDataAccessPointId: ""
    # -- Shared /logs EFS AccessPointId
    SharedLogsAccessPointId: ""
    # -- Brainspace APP /localdata EFS AccessPointId
    AppLocalDataAccessPointId: ""
    # -- Brainspace APP plugins EFS AccessPointId
    AppPluginsAccessPointId: ""
    # -- Brainspace Database EFS AccessPointId
    DatabaseDataAccessPointId: ""
    # -- Brainspace BatchTools EFS AccessPointId
    BtDataAccessPointId: ""
    # -- Brainspace Basis-Tech EFS AccessPointId
    BasisDataAccessPointId: ""

  # -- Options for class: pvc
  # -- The following volume claim names must already exist
  # -- The values in 'values-template.yaml' are the defaults
  pvc: {}
    # -- Shared Data `/data` (accessMode: ReadWriteMany)
    #sharedData: "pvc-shared-data"
    # -- Application logs (accessMode: ReadWriteMany)
    #sharedLogs: "pvc-shared-logs"
    # -- Application Local Data `/localdata` (accessMode: ReadWriteMany)
    #appLocalData: "pvc-app-localdata"
    # -- Application Plugins (accessMode: ReadWriteOnce)
    #appPlugins: "pvc-app-plugins"
    # -- Shared BatchTools (accessMode: ReadWriteMany)
    #BtData: "pvc-bt-data"
    # -- Shared BasisTech (accessMode: ReadWriteMany)
    #BasisData: "pvc-basis-data"
    # -- Database (only required if global.database.useContainer = true) (accessMode: ReadWriteOnce)
    #databaseData: "pv-db-data"

secrets:
  # -- The secrets provider
  # -- Providers:
  # --- external-secrets: (https://external-secrets.io/v0.5.9/)
  # --- kubernetes: Use kubernetes secret. Add secrets to the 'kubernetes' section below.
  provider: "external-secrets"

  # -- OPTIONS FOR: 'external-secrets' -- #
  externalSecrets:
    # -- The external-secrets provider
    # -- Providers:
    # --- aws: AWS SecretsManager
    # --- azurekv: Azure KeyVault
    provider: aws
    # -- Options for aws (AWS SecretsManager)
    aws:
      # -- Region: The AWS region where the secret resides (default "us-east-1")
      region: "us-east-1"

  # -- A list of secrets to create ('brainspace-secrets' is REQUIRED)
  secretDefinitions:
    # -- USAGE INSTRUCTIONS:
      # -- eksSecretName = The name of the kubernetes secret to create
    #- eksSecretName: "brainspace-secrets"
      # -- awsSecretName = The name of the AWS Secret in Secrets Manager (aws only)
      # awsSecretName: "eks/brainspace/prod"
      # -- azureTenantId = The Azure KeyVault tenantId (azure only)
      # azureTenantId: "some-tenant-id"
      # -- azureVaultUrl = The Azure KeyVault URL (azure only)
      # azureVaultUrl: "https://some-keyvault.vault.azure.net/"
      # -- useExistingSecret = Disable the creation of a kubernetes secret if it already exists
      # useExistingSecret: false
      # -- data = A list of secrets to create or fetch from external-secrets
      #data:
          # -- secretKey = The name of the kubernetes secret item to create
        #- secretKey: "brainspace_db_host"
          # -- property (optional) = The name of the secret property to fetch from external-secrets
          # property: "host"
          # -- envVar (optional) = Cretae this secret as an environment variable in the pods
          # envVar: "POSTGRESQL_HOST"
          # -- value (optional) = Set a value for the secret if not using external-secrets
          # value: "brains-db"
          # -- mountPath (optional) = Mount the secret as a directory in the pods
          # mountPath: "/var/secrets"
    # -- The Required Secret definition for Brainspace
    # -- DO NOT change the secretKey or envVar values for these secrets
    - eksSecretName: "brainspace-secrets"
      awsSecretName: "eks/brainspace/prod"
      azureTenantId: ""
      azureVaultUrl: ""
      useExistingSecret: false
      data:
        - secretKey: "brainspace_db_host"
          property: "host"
          envVar: "POSTGRESQL_HOST"
          # value: "brains-db"
        - secretKey: "brainspace_db_port"
          property: "port"
          envVar: "POSTGRESQL_PORT"
          # value: "5432"
        - secretKey: "brainspace_db_name"
          property: "database"
          envVar: "POSTGRESQL_DATABASE"
          # value: "brainspace"
        - secretKey: "brainspace_db_user"
          property: "brainsDbUsername"
          envVar: "POSTGRESQL_USERNAME"
          # value: "brainspace"
        - secretKey: "brainspace_db_password"
          property: "brainsDbPassword"
          envVar: "POSTGRESQL_PASSWORD"
          # value: "brainspace1"
    # -- Optionally add additional secrets here
    # -- Example: add a brainspace license secret
    # -- secretKey, volume and mountPath must be set to the values in this example
    # - eksSecretName: "brainspace-license"
    #   awsSecretName: "eks/brainspace/license"
    #   useExistingSecret: false
    #   data:
    #     - secretKey: "brainspace_license.txt"
    #       property: "license"
    #       volume: "brainspace-license-vol"
    #       mountPath: "/run/secrets/brainspace/license"

ingress:
  # -- The ingress class
  # -- Options:
  # --- alb: (AWS Application Load balancer - https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/)
  # --- nginx: Nginx Ingress (https://kubernetes.github.io/ingress-nginx/)
  class: "alb"
  # -- Will the ingress use an internal or internet-facing load balancer
  public: false
  hostname: ""
  # -- sslCertArn is only valid when using the 'alb' class
  sslCertArn: ""
  # -- Custom annotations for the ingress
  annotations: {}

brains_db:
  # -- Brainspace database/postgres container image
  image: "053522176595.dkr.ecr.us-east-1.amazonaws.com/ecr-public/bitnami/postgresql"
  # -- batch database/postgres container tag
  tag: "13.10.0"
  # -- Add a K8s node selector for this deployment to run in
  # -- Example: eks.amazonaws.com/nodegroup: brainspace-nodegroup
  nodeSelector: {}
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: false

brains_ui:
  # Number of replicas for the UI workload
  replicas: 1
  # Brainspace UI container image
  image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/ui"
  # Brainspace UI container tag
  tag: "r11.6.0"
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: true
  # -- Add a K8s node selector for this deployment to run in
  # -- Example: eks.amazonaws.com/nodegroup: brainspace-nodegroup
  nodeSelector: {}
  tolerations: []
    # - effect: "NoSchedule"
    #   key: "linux-small"
    #   operator: "Exists"
  # -- Specify customizations to the nginx proxy
  proxyConfig: ""

brains_bt:
    # batch tools container image
    image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/batch-tools"
    # batch tools container tag
    tag: "line.r11.6-githash-1fe6177"
    # basis tech directory
    basis_dir: "basis-tech-rbl-7.46.1_rex-7.55.5_rli-7.23.7_rsent-2.0.5_c68.0_perpetual.1"

brains_app:
  # -- Brainspace APP container image
  image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/application"
  # -- Brainspace APP container tag
  tag: "r11.6.0"
  # -- Brainspace home directory - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
  brainspaceHome: "/opt/bitnami/apache-tomcat"
  # -- Brainspace Logs directory - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
  brainspaceLogs: "/opt/bitnami/apache-tomcat/logs"
  # -- Brainspace license file from secret - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
  brainspaceLicenseFile: "/run/secrets/brainspace/license/brainspace_license.txt"
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: false
  # -- Add a K8s node selector for this deployment to run in
  # -- Example: eks.amazonaws.com/nodegroup: brainspace-nodegroup
  nodeSelector: {}
  # -- Specify customizations to the Brainspace Application
  options:
    # -- Run build jobs as k8s jobs rather than replicasets (default: true)
    transientAnalytics: true
    # -- Use the Brainspace TDM Cache (default: false)
    tdmCache: false
  # -- Customize the JVM memory settings for the brains_app pods
  jvmMemory:
    # -- Auto calculate the max ram percentages (default: true)
    # -- If false, then use the MaxRAMPercentage value below
    # -- to calculate the max mem (-Xmx) from resource limits
    # -- https://www.eclipse.org/openj9/docs/xxusecontainersupport/
    useContainerSupport: true
    # -- Maximum ram percentage (default: 73)
    MaxRAMPercentage: "73"
    # -- Maximum metaspace size (default: 256m)
    MaxMetaspaceSize: "256m"
  plugins:
    # -- Brainspace APP plugins container image
    image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/plugins"
    # -- Brainspace APP plugins container tag
    tag: "r11.6.0"
  additionalPlugins:
    # -- Brainspace APP additional plugins container image
    image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/additional-plugins"
    # Brainspace APP additional plugins container tag
    tag: "r11.6.0"
  # -- logs directory in persistent storage
  logDir: "app"
  # -- Define static resources for the brains_app pods
  resources:
    memory: 220
    cpu: 30
  # -- Optionally set custom environment variables for Brainspace Application
  env: {}
    # ENV_VAR: "value"
  # -- Optionally set custom tolerations
  tolerations: []
    # - effect: "NoSchedule"
    #     key: "linux-large"
    #     operator: "Exists"

brains_ana:
  # -- Brainspace ANA (analytics) container image
  image: "249718226835.dkr.ecr.us-east-1.amazonaws.com/brainspace/analytics-server"
  # Brainspace ANA (analytics) container tag
  tag: "r11.6.0"
  # -- Brainspace home directory - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
  brainspaceHome: "/opt/bitnami/java"
  # -- Brainspace Logs directory - DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING
  brainspaceLogs: "/opt/bitnami/java/app/analytics-server/logs"
  # -- Add a K8s node selector for this deployment to run in
  # -- Example: eks.amazonaws.com/nodegroup: brainspace-nodegroup
  nodeSelector: {}
  replicas: 0
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: false
  # -- localdata storage
  storage:
    # -- storage class
    # -- Options:
    # --- 'gp2' (must specify size in GB)
    # --- 'emptyDir' (node local storage)
    class: "emptyDir"
    # size: 400
  # -- Customize the JVM memory settings for the brains_ana pods
  jvmMemory:
    # -- Maximum ram percentage of resource limits for BT_HEAP_MAX (default: 75)
    MaxRAMPercentage: "75"
  # -- Define static resources for the brains_ana pods
  resources:
    memory: 220
    cpu: 30
  # -- Optionally set custom environment variables for Brainspace Analytics
  env: {}
    # ENV_VAR: "env_value"
  # -- Optionally set custom tolerations
  tolerations: []
    # - effect: "NoSchedule"
    #     key: "linux-large"
    #     operator: "Exists"
    
  # -- Use the ANA Auto-scaling pod
  autoscale:
    enabled: true
    image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/prod/brainspace/ana-autoscale
    tag: "11.5.0"
    reloadOnUpgrade: true
    # -- Add a K8s node selector for this deployment to run in
    # -- Example: eks.amazonaws.com/nodegroup: brainspace-nodegroup
    nodeSelector: {}
    tolerations: []
    debug: "0"
    thresholds:
      # -- The minimum number of replicas of the brains_ana deployment
      min: 0
      # -- The maximum number of replicas of the brains_ana deployment
      max: 2

# -- Secret default parameters
# -- DO NOT EDIT --
defaults:
  secrets:
    brainspace_db_host:
      property: "host"
      value: "brains-db"
      envVar: "POSTGRESQL_HOST"
    brainspace_db_port:
      property: "port"
      value: "5432"
      envVar: "POSTGRESQL_PORT"
    brainspace_db_name:
      property: "database"
      value: "brainspace"
      envVar: "POSTGRESQL_DATABASE"
    brainspace_db_user:
      property: "brainsDbUsername"
      value: "brainspace"
      envVar: "POSTGRESQL_USERNAME"
    brainspace_db_password:
      property: "brainsDbPassword"
      value: "brainspace1"
      envVar: "POSTGRESQL_PASSWORD"
    brainspace_license.txt:
      property: "license"
      volume: "brainspace-license-vol"
      mountPath: "/run/secrets/brainspace/license"
      optional: true
      readOnly: true

PodDisruptionBudget_ana_autoscale:
  name: PDBana-autoscale
  enabled: true
  minAvailable: 1
  maxUnavailable:

PodDisruptionBudget_app:
  name: PDBapp
  enabled: true
  minAvailable: 1
  maxUnavailable:

PodDisruptionBudget_db:
  name: PDBdb
  enabled: true
  minAvailable: 1
  maxUnavailable:

PodDisruptionBudget_ui:
  name: PDBui
  enabled: true
  minAvailable: 1
  maxUnavailable: