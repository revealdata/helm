{{- if (include "elasticsearch.createSecret" . ) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
{{- if .Values.commonAnnotations }}
{{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
{{- end }}
type: Opaque
data:
  elasticsearch-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "elasticsearch-password" "length" 16 "providedValues" (list "security.elasticPassword") "context" $) }}
{{- end }}

{{- if and .Values.secrets.externalSecrets.aws.secretName .Values.secrets.externalSecrets.aws.region }}
# Using AWS SecretsManager
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ printf "%s-secret-store" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.secrets.externalSecrets.aws.region | default "us-east-1" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ printf "%s-secrets" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: {{ printf "%s-secret-store" (include "common.names.fullname" .) }}
    kind: SecretStore
  target:
    name: {{ template "common.names.fullname" . }}
    creationPolicy: Owner
  data:
    - secretKey: {{ .Values.secrets.externalSecrets.aws.secretKey | default "elasticsearch-password" }}
      remoteRef:
        key: {{ .Values.secrets.externalSecrets.aws.secretName | default  "eks/region_elasticsearch_password" }}
        property: "password"
{{- end }}

{{- if (include "elasticsearch.createTlsPasswordsSecret" . ) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-tls-pass" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if .Values.security.tls.keystorePassword }}
  keystore-password: {{ default "" .Values.security.tls.keystorePassword | b64enc | quote }}
  {{- end }}
  {{- if .Values.security.tls.truststorePassword }}
  truststore-password: {{ default "" .Values.security.tls.truststorePassword | b64enc | quote }}
  {{- end }}
  {{- if .Values.security.tls.keyPassword }}
  key-password: {{ default "" .Values.security.tls.keyPassword | b64enc | quote }}
  {{- end }}
{{- end }}
