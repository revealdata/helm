---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-web
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  selector:
    matchLabels:
      app: deployment-review-web
  progressDeadlineSeconds: 600
  replicas: {{ .Values.review.web.replicas | default 1 }}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-review-web
      {{- if .Values.review.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      nodeSelector:
{{ $nodeSelector := concat .Values.review.nodeSelector.windows .Values.review.web.nodeSelector }}
{{- toYaml $nodeSelector | indent 8 }}
      containers:
      - image: {{.Values.review.web.image}}:{{.Values.review.web.tag}}
        ports:
        - containerPort: 443
        envFrom:
        - configMapRef:
            name: "review-env"
        env:
{{- /* output env vars for Review secrets (_helpers.tpl) */}}
{{- include "resources.env.secrets" . | indent 6 }}
        resources:
{{ $resources := mergeOverwrite .Values.review.resources .Values.review.web.resources }}
{{- toYaml $resources | indent 10 }}
        imagePullPolicy: Always
        name: review-web
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
{{ $tolerations := concat .Values.review.tolerations.windows .Values.review.web.tolerations }}
{{- toYaml $tolerations | indent 8 }}

---
apiVersion: v1
kind: Service
metadata:
  name: service-review-web
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-path: /Reveal/AuthorizationPages/LoginNotAuthorized.aspx
    alb.ingress.kubernetes.io/success-codes: 200-302

spec:
  selector:
    app: deployment-review-web
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
