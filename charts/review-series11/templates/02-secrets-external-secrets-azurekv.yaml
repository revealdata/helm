{{- if eq .Values.secrets.provider "external-secrets" }}
{{- if eq .Values.secrets.externalSecrets.provider "azurekv" }}

{{- if .Values.secrets.externalSecrets.azurekv.auth }}
{{- if .Values.secrets.externalSecrets.azurekv.auth.ClientID }}
# Using Azure KeyVault
---
apiVersion: v1
kind: Secret
metadata:
  name: review-sp
  namespace: {{ .Values.global.namespace | default .Release.Name }}
type: Opaque
data:
  ClientID: {{ .Values.secrets.externalSecrets.azurekv.auth.ClientID | b64enc }}
  ClientSecret: {{ .Values.secrets.externalSecrets.azurekv.auth.ClientSecret | b64enc }}
{{- end }}
{{- end }}

{{- if .Values.secrets.externalSecrets.azurekv.TennantId }}
{{- if .Values.secrets.externalSecrets.azurekv.VaultUrl }}
---
apiVersion: external-secrets.io/v1alpha1
kind: SecretStore
metadata:
  name: review-secret-store
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  provider:
    azurekv:
      tenantId: {{ .Values.secrets.externalSecrets.azurekv.TennantId | quote }}
      vaultUrl: {{ .Values.secrets.externalSecrets.azurekv.VaultUrl | quote }}
      authSecretRef:
        clientId:
          name: review-sp
          key: ClientID
        clientSecret:
          name: review-sp
          key: ClientSecret
{{- end }}
{{- end }}

---
apiVersion: external-secrets.io/v1beta1 
kind: ExternalSecret
metadata:
  name: review-secrets
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: review-secret-store
    kind: SecretStore
  target:
    name: review-secrets
    creationPolicy: Owner
  data:
    - secretKey: databaseServer
      remoteRef:
          key: databaseServer
    - secretKey: AuthMethod
      remoteRef:
        key: AuthMethod
    - secretKey: SqlUsername
      remoteRef:
          key: SqlUsername
    - secretKey: SqlPassword
      remoteRef:
          key: SqlPassword
    - secretKey: userManagementDB
      remoteRef:
          key: userManagementDB
{{- end }}
{{- end }}