---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-series11-ui
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  labels:
{{ $labels :=  mergeOverwrite .Values.review.labels .Values.review.ui.labels }}
{{- toYaml $labels | indent 4 }}
spec:
  selector:
    matchLabels:
      app: deployment-review-series11-ui
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-review-series11-ui
      {{- if .Values.review.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      nodeSelector:
{{- $nodeSelector := deepCopy .Values.review.nodeSelector.linux |  mergeOverwrite .Values.review.ui.nodeSelector }}
{{ toYaml $nodeSelector | indent 8 }}
      containers:
      - image: {{.Values.review.ui.image}}:{{.Values.review.ui.tag}}
        ports:
        - containerPort: 443
        resources:
{{- $resourcesUi := deepCopy .Values.review.resources | mergeOverwrite .Values.review.ui.resources }}
{{ toYaml $resourcesUi | indent 10 }}
        imagePullPolicy: Always
        name: review-series11-ui
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
{{ $tolerationsUi := concat .Values.review.tolerations.linux .Values.review.ui.tolerations }}
{{- toYaml $tolerationsUi | indent 8 }}

---
apiVersion: v1
kind: Service
metadata:
  name: service-review-series11-ui
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-path: /ui-version.json
spec:
  selector:
    app: deployment-review-series11-ui
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
