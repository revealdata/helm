---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reveal-cloud-ai-transcription
  namespace: {{ .Values.global.namespace | default .Release.Name }}
spec:
  selector:
    matchLabels:
      app: deployment-reveal-cloud-ai-transcription
  progressDeadlineSeconds: 600
  replicas: {{ .Values.cloud_ai.services.transcriptionWorker.replicas }}
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: deployment-reveal-cloud-ai-transcription
      {{- if .Values.cloud_ai.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      nodeSelector:
{{ $nodeSelector := mergeOverwrite .Values.cloud_ai.services.nodeSelector .Values.cloud_ai.services.transcriptionWorker.nodeSelector }}
{{- toYaml $nodeSelector | indent 8 }}
      volumes:
      - name: ephemeral
        emptyDir:
          sizeLimit: 100Gi
      containers:
      - image: {{.Values.cloud_ai.services.transcriptionWorker.image}}:{{.Values.cloud_ai.services.transcriptionWorker.tag}}
        volumeMounts:
          - mountPath: {{ .Values.cloud_ai.services.api.storage.mountPath }}
            name: ephemeral
        envFrom:
        - configMapRef:
            name: "reveal-cloud-ai-env"
        env:
          - name: TARGET_APP
            value: "transcription"
{{- /* output env vars for Review secrets (_helpers.tpl) */}}
{{- include "resources.env.secrets" . | indent 6 }}
        resources:
{{ $resources := mergeOverwrite .Values.cloud_ai.services.resources .Values.cloud_ai.services.transcriptionWorker.resources }}
{{- toYaml $resources | indent 10 }}
        imagePullPolicy: Always
        name: reveal-cloud-ai-transcription
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
{{ $tolerations := concat .Values.cloud_ai.services.tolerations .Values.cloud_ai.services.transcriptionWorker.tolerations }}
{{- toYaml $tolerations | indent 8 }}
{{- if .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.enabled }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.name }}
spec:
  selector:
    matchLabels:
      app: deployment-reveal-cloud-ai-transcription
{{- if .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.cloud_ai.services.transcriptionWorker.PodDisruptionBudget.maxUnavailable }}
{{- end }}
{{- end -}}