apiVersion: apps/v1
kind: Deployment
metadata:
  name: reveal-ai-processing
  namespace: {{.Values.global.namespace}}
spec:
  selector:
    matchLabels:
      app: deployment-reveal-ai-processing
  progressDeadlineSeconds: 600
  replicas: {{ .Values.processing.replicaCount | default 2 }}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-reveal-ai-processing
      {{- if .Values.global.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      nodeSelector:
        {{- toYaml .Values.processing.nodeSelector | nindent 8 }}
      containers:
        - image: {{.Values.processing.image}}:{{.Values.processing.tag}}
          {{- if .Values.processing.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.processing.volumeMounts | nindent 10 }}
          {{- end }}
          env:
            {{- toYaml .Values.processing.env | nindent 10 }}
          imagePullPolicy: Always
          name: reveal-ai-processing
          resources:
          {{- if .Values.processing.resources }}
            {{- toYaml .Values.processing.resources | nindent 12}}
          {{- else }}
            requests:
              memory: "60Gi"
              cpu: "8000m"
            # Expect to run on a node with 32GB of memory. Want to leave a bit for the OS.
            limits:
              memory: "120Gi"
              cpu: "16000m"
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      {{- if .Values.processing.volumes }}
      volumes:
        {{- toYaml .Values.processing.volumes | nindent 8 }}
      {{- end }}
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
        {{- toYaml .Values.processing.tolerations | nindent 8 }}
{{- if .Values.processing.PodDisruptionBudget.enabled }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.processing.PodDisruptionBudget.name }}
  namespace: {{.Values.global.namespace}}
spec:
  selector:
    matchLabels:
      app: deployment-reveal-ai-processing
{{- if .Values.processing.PodDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.processing.PodDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.processing.PodDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.processing.PodDisruptionBudget.maxUnavailable }}
{{- end }}
{{- end -}}