{{- if .Values.automation.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: reveal-ai-automation
  namespace: {{.Values.global.namespace}}
rules:
  - apiGroups: [ "", "apps", "batch" ]
    resources: [ "deployments", "jobs", "pods", "secrets",  "configmaps" ]
    verbs: [ "*" ]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reveal-ai-automation
  namespace: {{.Values.global.namespace}}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: reveal-ai-automation
  namespace: {{.Values.global.namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reveal-ai-automation
subjects:
  - kind: ServiceAccount
    name: reveal-ai-automation
    namespace: {{.Values.global.namespace}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reveal-ai-automation
  namespace: {{.Values.global.namespace}}
spec:
  selector:
    matchLabels:
      app: deployment-reveal-ai-automation
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: deployment-reveal-ai-automation
      {{- if .Values.global.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      serviceAccountName: reveal-ai-automation
      nodeSelector:
        {{- toYaml .Values.automation.nodeSelector | nindent 8 }}
      containers:
        - image: {{.Values.automation.image}}:{{.Values.automation.tag}}
          env:
            {{- toYaml .Values.automation.env | nindent 10 }}
          imagePullPolicy: Always
          name: reveal-ai-automation
          resources:
            requests:
              memory: "250Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
        {{- toYaml .Values.automation.tolerations | nindent 8 }}
{{- end }}