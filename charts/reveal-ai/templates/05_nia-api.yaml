---
## NIA Storage Volume claim for scores
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nia-scores
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.nia.nia_api.storage.class }}
  volumeName: nia-scores-pv
  resources:
    requests:
      storage: {{ .Values.nia.nia_api.storage.size }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nia-api
  namespace: {{.Values.global.namespace}}
spec:
  selector:
    matchLabels:
      app: deployment-nia-api
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: deployment-nia-api
      {{- if .Values.nia.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      nodeSelector:
        {{- toYaml .Values.nia.nia_api.nodeSelector | nindent 8 }}
      containers:
      - image: {{.Values.nia.nia_api.image}}:{{.Values.nia.nia_api.tag}}
        ports:
        - containerPort: 443
        env:
          {{- with .Values.nia.env }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.nia.nia_api.env }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
        resources:
          requests:
            memory: 500Mi
          limits:
            memory: 4000Mi
        imagePullPolicy: Always
        name: nia-api
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      tolerations:
        {{- toYaml .Values.nia.nia_api.tolerations | nindent 8 }}

---
apiVersion: v1
kind: Service
metadata:
  name: service-nia-api
  namespace: {{.Values.global.namespace}}
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTP

spec:
  selector:
    app: deployment-nia-api
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5566
{{- if .Values.nia.nia_api.PodDisruptionBudget.enabled }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.nia.nia_api.PodDisruptionBudget.name }}
spec:
  selector:
    matchLabels:
      app: deployment-nia-api
{{- if .Values.nia.nia_api.PodDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.nia.nia_api.PodDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.nia.nia_api.PodDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.nia.nia_api.PodDisruptionBudget.maxUnavailable }}
{{- end }}
{{- end -}}