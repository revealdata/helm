{{- if .Values.ingress.enabled }}
{{- $ingress_class := (.Values.ingress.class | default "alb") -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  name: reveal-ai-ingress
  annotations:
    {{- if .Values.ingress.hostname }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.ingress.hostname }}
    {{- end }}
    kubernetes.io/ingress.class: {{ $ingress_class }}

    {{- if eq $ingress_class "alb" }}
    # AWS ALB ingress (alb)
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/ingress/annotations/
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/security-groups: "k8s-reveal-ai-ingress"
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000,routing.http2.enabled=true,routing.http.drop_invalid_header_fields.enabled=true,access_logs.s3.enabled=true,access_logs.s3.prefix=ingress_logs/reveal-ai-ingress/{{ .Values.global.namespace }},access_logs.s3.bucket={{ .Values.ingress.logBucket }}
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-Res-2021-06
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=false
    #  Health check path annotations
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "4"
    {{- if .Values.ingress.sslCertArn }}
    # The ARN of your SSL certificate.
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.sslCertArn }}
    {{- end }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # SSL Redirect Setting
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/actions.response-403: '{"Type":"fixed-response","FixedResponseConfig":{"ContentType":"text/plain","StatusCode":"403","MessageBody":"403 Forbidden"}}'
    {{- end }}
    
    {{- if eq $ingress_class "nginx" }}
    # Nginx ingress (nginx)
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "http_503"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/upstream-vhost: {{ quote .Values.ingress.hostname }}
    {{- end }}
    {{ if .Values.ingress.annotations }}
    {{- toYaml .Values.ingress.annotations }}
    {{- end }}
spec:
  defaultBackend:
    service:
      name: service-reveal-ai-api
      port:
        number: 80
  rules:
    {{- if eq $ingress_class "nginx" }}
    - host: {{ .Values.ingress.hostname }}
      http:
    {{- else }}
    - http:
    {{- end }}
        paths:
          - path: /
            pathType:  Prefix
            backend:
              service:
                name: service-reveal-ai-api
                port:
                  number: 80
{{- end }}
