apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}-config
data:
  ES_HOST: {{ .Values.ConfigMap.data.esHost }}
  ES_PORT: "{{ .Values.ConfigMap.data.esPort }}"
  ES_AUTH: "{{ .Values.ConfigMap.data.esAuth }}"
  ENABLE_GQL_PLAYGROUND: "{{ .Values.ConfigMap.data.enableGqlPlayground }}"
  ENABLE_TRACING: "true"
  REVEAL_ENV: "{{ .Values.env }}"
  ES_PROTOCOL: "https"
  ARGO_NAMESPACE: "{{ .Values.name }}"
  DATAOPS_TOOLS_IMAGE_TAG: "{{ .Values.ConfigMap.data.dataopsToolsImageTag }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  # If you want to use this config map by default, name it "artifact-repositories". Otherwise, you can provide a reference to a
  # different config map in `artifactRepositoryRef.configMap`.
  name: artifact-repositories
  labels:
    app.kubernetes.io/name: argo
  annotations:
    workflows.argoproj.io/default-artifact-repository: default-v1
data:
  artifactRepository: |
    s3:
      bucket: {{ .Values.argoWorkflowsArtifactRepository.s3bucket }}
      endpoint: s3.amazonaws.com      #AWS => s3.amazonaws.com; GCS => storage.googleapis.com
      useSDKCreds: true               #tells argo to use AWS SDK's default provider chain, enable for things like IRSA support
---
apiVersion: v1
kind: ConfigMap
metadata:
  # If you want to use this config map by default, name it "artifact-repositories". Otherwise, you can provide a reference to a
  # different config map in `artifactRepositoryRef.configMap`.
  name: workflow-controller-configmap
  labels:
    app.kubernetes.io/name: argo
  annotations:
    workflows.argoproj.io/default-artifact-repository: default-v1
data:
  artifactRepository: |
    s3:
      bucket: {{ .Values.argoWorkflowsArtifactRepository.s3bucket }}
      endpoint: s3.amazonaws.com      #AWS => s3.amazonaws.com; GCS => storage.googleapis.com
      useSDKCreds: true               #tells argo to use AWS SDK's default provider chain, enable for things like IRSA support
