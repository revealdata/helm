---
global:
  #- Optionally set a namespace value. If empty, the helm release name is used
  namespace: ""
  #- Optionally disable the namespace creation as it may already exist
  NoNamespace: false
  ecr:
    enabled: false
    #- AWS Account ID (default "053522176595")
    account: ""
    #- ECR AWS Region (default "us-east-1")
    region: ""
    #- Set the full hostname/url for the secret rather than building it with account and region
    host: ""
    #- Docker ECR Password (required)
    #-- Command: aws ecr get-login-password
    password: ""
secrets:
  #- The secrets provider
  #-- Providers:
  #--- secrets-store-csi: (https://secrets-store-csi-driver.sigs.k8s.io)
  #--- external-secrets: (https://external-secrets.io/v0.5.9/)
  #--- kubernetes: Use kubernetes secret. Add secrets to the 'kubernetes' section below.
  provider: "external-secrets"

  #- Optionally use a service account with RBAC for obtaining secrets (AWS Only)
  #-- The IAM Role ARN created by CloudFormation or Terraform
  #-- Required if using provider: "secrets-store-csi"
  ServiceAccount:
    RoleArn: ""

  # -- OPTIONS FOR: provider: 'kubernetes' -- #
  kubernetes:
    keycloak_admin_user: ""
    keycloak_admin_password: ""
    #-- https://www.keycloak.org/server/db
    kc_db: ""
    kc_db_url_host: ""
    kc_db_url_port: ""
    kc_db_url_database: ""
    kc_db_username: ""
    kc_db_password: ""

  # -- OPTIONS FOR: 'external-secrets' -- #
  ExternalSecrets:
    #- The external-secrets provider
    #-- Providers: 
    #--- aws: AWS SecretsManager
    #--- azurekv: Azure KeyVault
    provider: aws
    #- Options for aws (AWS SecretsManager)
    aws:
      #- Region: The AWS region where the secret resides (default "us-east-1")
      Region: "<ADD VALUE IF USING secrets.provider='external-secrets'>"
      #- SecretName: The Secrets Manager Name for the admin and database secrets created by CloudFormation or Terraform
      SecretName:
        admin: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='aws'>"
        database: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='aws'>"
    #- Options for azurekv (Azure KeyVault)
    azurekv:
      auth:
        ClientID: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='azurekv'>"
        ClientSecret: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='azurekv'>"
      TennantId: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='azurekv'>"
      VaultUrl: "<ADD VALUE IF USING secrets.provider='external-secrets' and ExternalSecrets.provider='azurekv'>"

  # -- OPTIONS FOR: 'secrets-store-csi' (AWS ONLY) -- #
  SecretsStoreCSI:
    #- SecretArn: The Secrets Manager ARN for the admin and database secrets created by CloudFormation or Terraform
    secretArn:
      admin: "<ADD VALUE IF USING secrets.provider='secrets-store-csi'>"
      database: "<ADD VALUE IF USING secrets.provider='secrets-store-csi'>"
  
ingress:
    #- The ingress class (set per ingress)
    #-- Options:
    #--- alb: (AWS Application Load balancer - https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/)
    #--- nginx: Nginx Ingress (https://kubernetes.github.io/ingress-nginx/)
    public:
      enabled: true
      hostname: "<ADD EXTERNAL HOSTNAME HERE>"
      class: "alb"
      #- sslCertArn is only valid when using the 'alb' class
      sslCertArn: ""
      #- Uncomment below to add custom annotations for the public ingress
      # annotations:
    admin:
      enabled: true
      hostname: "<ADD ADMIN HOSTNAME HERE>"
      class: "alb"
      #- sslCertArn is only valid when using the 'alb' class
      sslCertArn: ""
      #- Uncomment below to add custom annotations for the admin ingress
      # annotations:

keycloak:
    image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/reveal/keycloak
    tag: 18.0.2
    replicas: 1
    #- Force a re-deploy when a helm upgrade happens
    reloadOnUpgrade: false
    #- Define static resources for the keycloak pods
    resources:
      memory: 2
    #- Import CA certificate files in PEM format into the Keycloak Trust Store
    #-- The directory containing CA certificates must reside in the chart root directory
    #-- The directory must not be in the .helmignore file
    cacerts:
      enabled: true
        #- Optional path to the directory where CA certificates are located
        path: "pki/ca"
    env:
      KC_LOG_LEVEL: "INFO"
      #-- https://www.keycloak.org/server/hostname
      #-- https://www.keycloak.org/server/db
      #-- Uncomment and add values if needed
      #KEYCLOAK_ADMIN: ""
      #KEYCLOAK_ADMIN_PASSWORD: ""
      #- Set to false if using MSSQL
      KC_TRANSACTION_XA_ENABLED: "true"
    proxy:
      image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/reveal/ui/base
      tag: 1.1.5
      replicas: 1
      env:
        TEST: "false" # Only use in testing snd development. Disables security headers.