{{- if .Values.ingress.admin.enabled }}
{{- $ingress_class := (.Values.ingress.admin.class | default "alb") -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  name: keycloak-admin-ui
  annotations:
    {{- if .Values.ingress.admin.hostname }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.ingress.admin.hostname }}
    {{- end }}
    kubernetes.io/ingress.class: {{ $ingress_class }}
    
    {{- if eq $ingress_class "alb" }}
    # AWS ALB ingress (alb)
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/ingress/annotations/
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: "internal"
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=false
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000 # max=4000
    #  Health check path annotations
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "4"
    # The ARN of your SSL certificate.
    {{- if .Values.ingress.admin.sslCertArn }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.admin.sslCertArn }}
    {{- end }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # SSL Redirect Setting
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    {{- end }}
    
    {{- if eq $ingress_class "nginx" }}
    # Nginx ingress (nginx)
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "http_503"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    {{ if .Values.ingress.admin.annotations }}
    {{- toYaml .Values.ingress.admin.annotations }}
    {{- end }}
    {{- end }}
spec:
  # Needed for nginx ingress for some reason. It doesn't like not having a default backend.
  defaultBackend:
    service:
      name: keycloak-proxy
      port:
        number: 443
  rules:
    {{- if eq $ingress_class "nginx" }}
    - host: {{ .Values.ingress.admin.hostname }}
      http:
    {{- else }}
    - http:
    {{- end }}
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                {{- if eq $ingress_class "alb" }}
                name: ssl-redirect
                port:
                  name: use-annotation
                {{- else }}
                name: keycloak-proxy
                port:
                  number: 443
                {{- end }}
{{- end }}