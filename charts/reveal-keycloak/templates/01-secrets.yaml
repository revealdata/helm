{{- if .Values.keycloak.cacerts.enabled }}
{{- $cacerts_path := (.Values.keycloak.cacerts.path | default "cacerts") -}}
---
# Keycloak Trusted CA Certs
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-cacerts
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  labels:
    cacerts_path: {{ $cacerts_path | quote }}
type: Opaque
data:
  {{- $root := . -}}
  {{- range $path, $bytes := .Files.Glob (printf "%s/*.pem" $cacerts_path) }}
  {{ base $path }}: '{{ $root.Files.Get $path | b64enc }}'
  {{- end }}
{{- end }}

{{- if .Values.global.ecr.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "aws-ecr-credentials"
  namespace: {{ .Values.global.namespace | default .Release.Name }}
type: kubernetes.io/dockerconfigjson
data:
  {{- $region := print .Values.global.ecr.region | default "us-east-1" }}
  {{- $server := print .Values.global.ecr.account ".dkr.ecr." $region ".amazonaws.com" }}
  {{- $username := print .Values.global.ecr.username | default "AWS" }}
  {{- $secretValue := printf "{\"auths\": {\"%s\": {\"username\": \"%s\", \"password\": \"%s\" } } }" $server $username .Values.global.ecr.password }}
  .dockerconfigjson: {{ $secretValue | b64enc | quote}}
{{- end }}
