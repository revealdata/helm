---
# Deployment: keycloak-proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-proxy
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  labels:
    app.kubernetes.io/name: keycloak-proxy
    app.kubernetes.io/part-of: keycloak
    app.kubernetes.io/component: application
spec:
  selector:
    matchLabels:
      app: keycloak-proxy
  progressDeadlineSeconds: 600
  replicas: {{ .Values.keycloak.proxy.replicas | default 1 }}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak-proxy
      {{- if .Values.keycloak.reloadOnUpgrade }}
      annotations:
        timestamp: {{ now | quote }}
      {{- end }}
    spec:
      hostname: keycloak
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
        {{- if .Values.keycloak.proxy.nodegroup }}
        alpha.eksctl.io/nodegroup-name: {{ .Values.keycloak.proxy.nodegroup }}
        {{- end }}
      {{- if .Values.global.ecr.enabled }}
      imagePullSecrets:
      - name: aws-ecr-credentials
      {{- end }}
      containers:
      - name: keycloak
        image: {{ .Values.keycloak.proxy.image }}:{{ .Values.keycloak.proxy.tag | default "1.1.5" }}
        imagePullPolicy: {{ .Values.keycloak.proxy.imagePullPolicy | default "Always" }}
        {{- if .Values.keycloak.proxy.resources }}
        resources:
          requests:
            {{- if .Values.keycloak.proxy.resources.memory }}
            memory: "{{ .Values.keycloak.proxy.resources.memory }}Gi"
            {{- end }}
            {{- if .Values.keycloak.proxy.resources.cpu }}
            cpu: "{{ .Values.keycloak.proxy.resources.cpu }}000m"
            {{- end }}
        {{- end }}
        ports:
          - name: liveness-port
            containerPort: 80
            hostPort: 80
          - containerPort: 443
        startupProbe:
          failureThreshold: 2
          periodSeconds: 10
          httpGet:
            path: /
            port: liveness-port
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 30
          httpGet:
            path: /
            port: liveness-port
        envFrom:
        - configMapRef:
            name: keycloak-proxy-config
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
        {{- if .Values.keycloak.proxy.tolerations }}
{{ toYaml .Values.keycloak.proxy.tolerations | indent 6}}
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-proxy
  namespace: {{ .Values.global.namespace | default .Release.Name }}
  annotations:
    #  Health check path annotations
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  type: NodePort
  selector:
    app: keycloak-proxy
  ports:
    - name: http
      protocol: TCP
      port: 443
      targetPort: 443
