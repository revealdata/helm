---
global:
  # -- Optionally set a namespace value. If empty, the helm release name is used
  namespace: ""
  # -- Optionally disable the namespace creation as it may already exist
  noNamespace: false
  # -- Optionally set a service account for the pods
  serviceAccount:
    name: "keycloak-sa"
    roleArn: ""
  ecr:
    enabled: false
    # -- AWS Account ID (default "053522176595")
    account: ""
    # -- ECR AWS Region (default "us-east-1")
    region: ""
    # -- Set the full hostname/url for the secret rather than building it with account and region
    host: ""
    # -- Docker ECR Password (required)
    # -- Command: aws ecr get-login-password
    password: ""

secrets:
  # -- The secrets provider
  # -- Providers:
  # -- external-secrets: (https://external-secrets.io/v0.5.9/)
  # -- kubernetes: Use kubernetes secret. Add secrets to the 'kubernetes' section below.
  provider: "external-secrets"

  # -- OPTIONS FOR: 'external-secrets' -- #
  externalSecrets:
    # -- The external-secrets provider
    # -- Providers: 
    # -- aws: AWS SecretsManager
    # -- azurekv: Azure KeyVault
    provider: aws
    # -- Options for aws (AWS SecretsManager)
    aws:
      # -- Region: The AWS region where the secret resides (default "us-east-1")
      region: "us-east-1"
      # -- secretName: The Secrets Manager Name for the admin and database secrets created by CloudFormation or Terraform
      secretName:
        admin: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='aws'>"
        database: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='aws'>"
    # -- Options for azurekv (Azure KeyVault)
    azurekv:
      auth:
        ClientID: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
        ClientSecret: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
      TennantId: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
      VaultUrl: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"

  # -- OPTIONS FOR: provider: 'kubernetes' -- #
  kubernetes:
    keycloak_admin_user: ""
    keycloak_admin_password: ""
    # -- https://www.keycloak.org/server/db
    kc_db: ""
    kc_db_url_host: ""
    kc_db_url_port: ""
    kc_db_url_database: ""
    kc_db_username: ""
    kc_db_password: ""

ingress:
  # -- The ingress class (set per ingress)
  # -- Options:
  # -- alb: (AWS Application Load balancer - https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/)
  # -- nginx: Nginx Ingress (https://kubernetes.github.io/ingress-nginx/)
  public:
    enabled: true
    hostname: "<ADD EXTERNAL HOSTNAME HERE>"
    class: "alb"
    # -- sslCertArn is only valid when using the 'alb' class. Leave empty for aut-select
    sslCertArn: ""
    # -- Uncomment below to add custom annotations for the public ingress
    annotations: {}
  admin:
    enabled: true
    hostname: "<ADD ADMIN HOSTNAME HERE>"
    class: "alb"
    # -- sslCertArn is only valid when using the 'alb' class. Leave empty for aut-select
    sslCertArn: ""
    # -- Uncomment below to add custom annotations for the admin ingress
    annotations: {}

keycloak:
  image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/reveal/keycloak
  tag: 18.0.2
  replicas: 1
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: false
  # -- Define static resources for the keycloak pods
  resources:
    memory: 2
  # -- Import CA certificate files in PEM format into the Keycloak Trust Store
  # -- A trusted CA cert is required for the Keycloak pod to communicate with LDAPs
  # -- CA Certificates are added to a secret and mounted to the pod
  # -- You can also specify an existing secret in the same namespace to use
  caTrustStore:
    useExistingSecret: false
    secretName: "keycloak-cacerts"
    cacerts: {}
      # -- The CA certificate file name
      # - name: "ldap-ca"
        # -- The CA certificate file contents in PEM format
        # cert: |
        #     -----BEGIN CERTIFICATE-----
        #     MIIDBzCCAe+gAwIBAgIJAMZQ4Z0Z1Z0mMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYD
        #     VQQGEwJVUzELMAkGA1UECAwCQ0ExFDASBgNVBAcMC1NhbiBGcmFuY2lzY28xEzAR
        #     BgNVBAoMCkdvb2dsZSBJbmMxJDAiBgNVBAMMG0dvb2dsZSBJbnRlcm5ldCBBdXRo
        #     ...
        #     -----END CERTIFICATE-----
  hostAliases: []
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "foo.local"
    #   - "bar.local"
  env:
    KC_LOG_LEVEL: "INFO"
    # -- https://www.keycloak.org/server/hostname
    # -- https://www.keycloak.org/server/db
    # -- Uncomment and add values if needed
    # -- Set to false if using MSSQL
    KC_TRANSACTION_XA_ENABLED: "true"
  # -- Optionally set custom tolerations
  tolerations: []
    # - effect: "NoSchedule"
    #     key: "linux-large"
    #     operator: "Exists"
  proxy:
    image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/reveal/ui/base
    tag: 1.1.6
    replicas: 1
    env: {}
      # TEST: "true" # Only use in testing snd development. Disables security headers.
    # -- Optionally set custom tolerations
    tolerations: []
      # - effect: "NoSchedule"
      #     key: "linux-large"
      #     operator: "Exists"