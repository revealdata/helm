---
global:
  # -- Optionally set a namespace value. If empty, the helm release name is used
  namespace: ""
  # -- Optionally disable the namespace creation as it may already exist
  noNamespace: false
  # -- Optionally set a service account for the pods
  serviceAccount:
    name: "keycloak-sa"
    roleArn: ""
  ecr:
    enabled: false
    # -- AWS Account ID (default "053522176595")
    account: ""
    # -- ECR AWS Region (default "us-east-1")
    region: ""
    # -- Set the full hostname/url for the secret rather than building it with account and region
    host: ""
    # -- Docker ECR Password (required)
    # -- Command: aws ecr get-login-password
    password: ""

secrets:
  # -- The secrets provider
  # -- Providers:
  # -- external-secrets: (https://external-secrets.io/v0.5.9/)
  # -- kubernetes: Use kubernetes secret. Add secrets to the 'kubernetes' section below.
  provider: "external-secrets"

  # -- OPTIONS FOR: 'external-secrets' -- #
  externalSecrets:
    # -- The external-secrets provider
    # -- Providers: 
    # -- aws: AWS SecretsManager
    # -- azurekv: Azure KeyVault
    provider: aws
    # -- Options for aws (AWS SecretsManager)
    aws:
      # -- Region: The AWS region where the secret resides (default "us-east-1")
      region: "us-east-1"
      # -- secretName: The Secrets Manager Name for the admin and database secrets created by CloudFormation or Terraform
      secretName:
        admin: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='aws'>"
        database: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='aws'>"
    # -- Options for azurekv (Azure KeyVault)
    azurekv:
      auth:
        ClientID: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
        ClientSecret: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
      TennantId: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"
      VaultUrl: "<ADD VALUE IF USING secrets.provider='external-secrets' and externalSecrets.provider='azurekv'>"

  # -- OPTIONS FOR: provider: 'kubernetes' -- #
  kubernetes:
    keycloak_admin_user: ""
    keycloak_admin_password: ""
    # -- https://www.keycloak.org/server/db
    kc_db: ""
    kc_db_url_host: ""
    kc_db_url_port: ""
    kc_db_url_database: ""
    kc_db_username: ""
    kc_db_password: ""

ingress:
  # -- The ingress class (set per ingress)
  # -- Options:
  # -- alb: (AWS Application Load balancer - https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/)
  # -- nginx: Nginx Ingress (https://kubernetes.github.io/ingress-nginx/)
  backend:
      port: 8443
  public:
    enabled: true
    hostname: "localhost.localdomain"
    class: "alb"
    # -- Options for the 'alb' ingress class
    class_alb:
      # -- Enable/Disable IPv6 (dualstack) support (only valid when using the 'alb' class)
      ipv6: false
      # -- sslCertArn is only valid when using the 'alb' class. Leave empty for aut-select
      sslCertArn: ""
      # -- Add custom attributes for the public ingress
      # -- See: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/service/annotations/#attributes
      attributes: []
        # - key: "routing.http2.enabled"
        #   value: "true"
    # -- Restrict access to the keycloak admin console
    # -- If set to true, you may add a list of CIDR blocks to the 'allowedCIDRs' section below
    restrictAdmin:
      # -- Enable/Disable admin console access IP restrictions
      enabled: false
      # -- List of CIDR blocks to allow access to the admin console
      # -- OR a base64 encoded string of a list of CIDR blocks in json format
      adminAllowedCIDRs: []
      #   - "10.0.0.0/8"
      #   - "172.21.0.0/16"
      # adminAllowedCIDRs: WyIxMC4wLjAuMC84IiwgIjE3Mi4yMS4wLjAvMTYiLCAiMTcyLjIyLjAuMC8xNiJd
      # adminAllowedCIDRs: ["10.0.0.0/8", "172.21.0.0/16"]
      # -- Set to true if the 'adminAllowedCIDRs' is a base64 encoded json string
      b64Encoded: false
    # -- Options for the 'nginx' ingress class
    class_nginx: {}
    # -- Add custom annotations for the public ingress
    annotations: {}
  admin:
    enabled: false
    hostname: ""
    class: "alb"
    class_alb:
      # -- Enable/Disable IPv6 (dualstack) support (only valid when using the 'alb' class)
      ipv6: false
      # -- sslCertArn is only valid when using the 'alb' class. Leave empty for aut-select
      sslCertArn: ""
      # -- Add custom attributes for the admin ingress
      # -- See: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/guide/service/annotations/#attributes
      attributes: []
        # - key: "routing.http2.enabled"
        #   value: "true"
    # -- Uncomment below to add custom annotations for the admin ingress
    annotations: {}

keycloak:
  image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/prod/reveal/keycloak
  tag: 18.0.2.3
  replicas: 1
  # -- Force a re-deploy when a helm upgrade happens
  reloadOnUpgrade: false
  # -- Define static resources for the keycloak pods
  resources:
    requests:
      memory: 1024Mi
      cpu: 165m
    limits:
      memory: 4096Mi
      cpu: 4000m
  # -- Import CA certificate files in PEM format into the Keycloak Trust Store
  # -- A trusted CA cert is required for the Keycloak pod to communicate with LDAPs
  # -- CA Certificates are added to a secret and mounted to the pod
  # -- You can also specify an existing secret in the same namespace to use
  caTrustStore:
    useExistingSecret: false
    secretName: "keycloak-cacerts"
    cacerts: {}
      # -- The CA certificate file name
      # - name: "ldap-ca"
        # -- The CA certificate file contents in PEM format
        # cert: |
        #     -----BEGIN CERTIFICATE-----
        #     MIIDBzCCAe+gAwIBAgIJAMZQ4Z0Z1Z0mMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYD
        #     VQQGEwJVUzELMAkGA1UECAwCQ0ExFDASBgNVBAcMC1NhbiBGcmFuY2lzY28xEzAR
        #     BgNVBAoMCkdvb2dsZSBJbmMxJDAiBgNVBAMMG0dvb2dsZSBJbnRlcm5ldCBBdXRo
        #     ...
        #     -----END CERTIFICATE-----
  hostAliases: []
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "foo.local"
    #   - "bar.local"
  env:
    KC_LOG_LEVEL: "INFO"
    # AWS_REGION: "us-east-1"
    # -- https://www.keycloak.org/server/hostname
    # -- https://www.keycloak.org/server/db
    # -- Uncomment and add values if needed
    # -- Set to false if using MSSQL
    KC_TRANSACTION_XA_ENABLED: "true"
  # -- Optionally set custom tolerations
  tolerations: []
    # - effect: "NoSchedule"
    #     key: "linux-large"
    #     operator: "Exists"
  proxy:
    image: 053522176595.dkr.ecr.us-east-1.amazonaws.com/prod/reveal_ui/base
    tag: 2.1.8
    replicas: 1
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 1024Mi
        cpu: 1000m
    env: {}
      # TEST: "true" # Only use in testing snd development. Disables security headers.
    # -- Optionally set custom tolerations
    tolerations: []
      # - effect: "NoSchedule"
      #     key: "linux-large"
      #     operator: "Exists"
    # -- Optionally set custom security definitions for the proxy
    security: {}
      # -- Use an existing secret for the proxy security
      # -- The secret must be in the same namespace as the keycloak chart
      # useExistingSecret: true
      # secretName: "keycloak-proxy-security"
      # -- all: should all networks not specified be allowed or denied
      # -- options: allow, deny (default: allow)
      # all: allow
      # -- list of IP addresses or networks to allow and/or deny. Both bare IP addresses and CIDR notation are supported.
      # -- If an invalid network address is specified, the network will be dropped from the configuration and a WARNING will be in the log.
      # -- The list can be a mix of strings (single network) or a dictionary object with the following options:
      # -- options: 
      # --   - network: a.b.c.d(/e)
      # --     name: name of the network (optional. added to the nginx config as a comment)
      # --   - a.b.c.d(/e)
      # deny:
      #  - name: "known bad actor"
      #    network: 56.254.25.87
      # allow: 
      #   - 28.68.52.0/24
      # content_security_policy:
        # -- Reference: https://content-security-policy.com
        # -- Optionally disable the CSP header default values (default: true)
        # defaults: false
        #-- 'all': Source options that will be apllied to all directives under it. 
        # all:
        #   - "'self'"
        #   - "'unsafe-inline'"
        #   - "*.example.com"
        # -- Add CSP directives. The directive name is the key and the value is a list of source options.
        # img-src: 
        #   - "*.foo.com"
        # script-src:
        #   - "*.bar.com"

PodDisruptionBudgetkeycloak:
  name: pdbkKeyCloak
  enabled: true
  minAvailable: 1

PodDisruptionBudgetkeycloakproxy:
  name: pdbKeyCloakProxy
  enabled: true
  minAvailable: 1
